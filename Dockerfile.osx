# Use a standard Python base image
FROM python:3.12-slim
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
# set workdir
WORKDIR /app
# Create venv
RUN uv venv
# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1
# Install PyTorch, torchvision, and torchaudio for MPS on OsX
RUN uv pip install \
    torch \
    torchvision \
    torchaudio \
    datasets \
    huggingface_hub[hf_xet] \
    transformers \
    peft \
    bitsandbytes

# Install remaining dependencies using uv sync
# uv sync should respect the already installed PyTorch packages if versions are compatible
# --no-cache helps keep Docker layers smaller.
#RUN uv sync --no-cache

# Copy the training script
# Adjust path if strategic_game_chess.jsonl is also needed and not bundled or downloaded by the script
COPY fixed-scripts/function-finetune-osx.py .
# COPY DATASET
COPY ./glaive_fc_v2 /processed_datasets/glaive_fc_v2/
# Set environment variable for transformers
ENV TRANSFORMERS_NO_ADVISORY_WARNINGS=1
# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"
# Provide a shell for interactive debugging
#CMD ["bash"]
# Alternatively, to run the script directly (ensure it handles CPU execution):
CMD ["uv","run","python","./function-finetune-osx.py","--processed_dataset_path","./processed_datasets/glaive_fc_v2"]
